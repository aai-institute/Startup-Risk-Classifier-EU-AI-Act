Sub BoldAndCleanText_Corrected()
    Dim ws As Worksheet
    Dim rng As Range, cell As Range
    Dim regex As Object
    Dim matches As Object
    Dim match As Object
    Dim cleanText As String
    Dim startPos As Integer
    Dim adjustedText As String
    Dim offset As Integer
    
    ' Set the worksheet and range (entire used range)
    Set ws = ActiveSheet
    Set rng = ws.UsedRange

    ' Create RegExp object
    Set regex = CreateObject("VBScript.RegExp")
    regex.Pattern = "#####([^#]+)#####"
    regex.Global = True

    ' Loop through each cell in the range
    For Each cell In rng
        If Not IsEmpty(cell.Value) Then
            If regex.test(cell.Value) Then
                Set matches = regex.Execute(cell.Value)
                adjustedText = cell.Value  ' Store original text for editing
                
                ' First, remove ##### markers while preserving the text
                offset = 0
                For Each match In matches
                    Dim extractedText As String
                    extractedText = regex.Replace(match.Value, "$1") ' Extract text inside #####
                    
                    startPos = InStr(offset + 1, adjustedText, match.Value) ' Locate match position
                    If startPos > 0 Then
                        adjustedText = Left(adjustedText, startPos - 1) & extractedText & Mid(adjustedText, startPos + Len(match.Value))
                        offset = startPos + Len(extractedText) - 1 ' Move offset to account for replacement
                    End If
                Next match
                
                ' Update cell value (without #####)
                cell.Value = adjustedText
                
                ' Now, apply bold formatting to extracted text
                offset = 0 ' Reset offset for correct formatting
                For Each match In matches
                    extractedText = regex.Replace(match.Value, "$1") ' Extract text inside #####
                    startPos = InStr(offset + 1, cell.Value, extractedText) ' Locate the cleaned text
                    
                    If startPos > 0 Then
                        cell.Characters(startPos, Len(extractedText)).Font.Bold = True
                        offset = startPos + Len(extractedText) ' Move past current match
                    End If
                Next match
            End If
        End If
    Next cell

    ' Cleanup
    Set regex = Nothing
    MsgBox "Formatting Complete!", vbInformation
End Sub

